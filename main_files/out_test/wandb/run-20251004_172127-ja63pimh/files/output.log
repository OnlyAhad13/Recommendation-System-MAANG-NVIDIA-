2025-10-04 17:21:28,729 - INFO - Starting enterprise-grade training pipeline...
2025-10-04 17:21:28,729 - INFO - Loading data from ../movies_dataset/processed_data.pkl
2025-10-04 17:21:28,799 - INFO - Preparing datasets...
2025-10-04 17:21:28,799 - INFO - Engineering features for train data
2025-10-04 17:21:30,813 - INFO - Engineering features for val data
2025-10-04 17:21:31,035 - INFO - Engineering features for test data
2025-10-04 17:21:31,253 - INFO - Fitting negative sampler...
Traceback (most recent call last):
  File "/home/onlyahad/Desktop/Recommendation System/main_files/recommendation_system.py", line 1368, in <module>
    main()
  File "/home/onlyahad/Desktop/Recommendation System/main_files/recommendation_system.py", line 1356, in main
    model, history = trainer.train(args.pickle_path)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/onlyahad/Desktop/Recommendation System/main_files/recommendation_system.py", line 895, in train
    datasets = self.prepare_datasets(data)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/onlyahad/Desktop/Recommendation System/main_files/recommendation_system.py", line 792, in prepare_datasets
    val_df[col] = val_df[col].map(lambda x: le.transform([x])[0] if x in le.classes_ else -1).astype(np.int32)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/onlyahad/miniconda3/envs/ml_global/lib/python3.11/site-packages/pandas/core/series.py", line 4700, in map
    new_values = self._map_values(arg, na_action=na_action)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/onlyahad/miniconda3/envs/ml_global/lib/python3.11/site-packages/pandas/core/base.py", line 921, in _map_values
    return algorithms.map_array(arr, mapper, na_action=na_action, convert=convert)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/onlyahad/miniconda3/envs/ml_global/lib/python3.11/site-packages/pandas/core/algorithms.py", line 1743, in map_array
    return lib.map_infer(values, mapper, convert=convert)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "lib.pyx", line 2972, in pandas._libs.lib.map_infer
  File "/home/onlyahad/Desktop/Recommendation System/main_files/recommendation_system.py", line 792, in <lambda>
    val_df[col] = val_df[col].map(lambda x: le.transform([x])[0] if x in le.classes_ else -1).astype(np.int32)

KeyboardInterrupt
